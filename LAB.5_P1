#include <iostream>
#include <list>

using namespace std;

const int TABLE_SIZE = 15;

int hashFunction(int key) {
    return key % TABLE_SIZE;
}

void insert(list<int> table[], int key) {
    int index = hashFunction(key);
    table[index].push_back(key);
}

bool search(list<int> table[], int key) {
    int index = hashFunction(key);
    for (auto it = table[index].begin(); it != table[index].end(); ++it) {
        if (*it == key) {
            return true;
        }
    }
    return false;
}

int main()
{
    setlocale(0, "Ru");
    int arr[8];
    list<int> table[TABLE_SIZE];

    // Заполнение массива случайными числами из заданного диапазона
    for (int i = 0; i < 9; i++) {
        arr[i] = rand() % (58000 - 38000 + 1) + 38000;
    }

    // Заполнение хеш-таблицы
    for (int i = 0; i < 9; i++) {
        insert(table, arr[i]);
    }

    // Вывод исходного массива
    cout << "Исходный массив: ";
    for (int i = 0; i < 9; i++) {
        cout << arr[i] << " ";
    }
    cout << endl;

    // Вывод хеш-таблицы
    cout << "Хеш-таблица: " << endl;
    for (int i = 0; i < TABLE_SIZE; i++) {
        cout << i << ": ";
        for (auto it = table[i].begin(); it != table[i].end(); ++it) {
            cout << *it << " ";
        }
        cout << endl;
    }

    // Поиск элемента в хеш-таблице
    int key;
    cout << "Введите элемент для поиска: ";
    cin >> key;
    if (search(table, key)) {
        cout << "Элемент найден" << endl;
    }
    else {
        cout << "Элемент не найден" << endl;
    }

    return 0;
}
